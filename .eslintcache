[{"/mnt/n/Workspace/CS554/CS554FinalProject/src/index.tsx":"1","/mnt/n/Workspace/CS554/CS554FinalProject/src/reportWebVitals.ts":"2","/mnt/n/Workspace/CS554/CS554FinalProject/src/App.tsx":"3","/mnt/n/Workspace/CS554/CS554FinalProject/src/components/home.tsx":"4","/mnt/n/Workspace/CS554/CS554FinalProject/src/components/songs.tsx":"5","/mnt/n/Workspace/CS554/CS554FinalProject/src/components/playlists.tsx":"6","/mnt/n/Workspace/CS554/CS554FinalProject/src/components/song.tsx":"7","/mnt/n/Workspace/CS554/CS554FinalProject/src/components/playlist.tsx":"8","/mnt/n/Workspace/CS554/CS554FinalProject/src/components/login.tsx":"9"},{"size":500,"mtime":1607983141048,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1607981227404,"results":"12","hashOfConfig":"11"},{"size":940,"mtime":1607993368891,"results":"13","hashOfConfig":"11"},{"size":426,"mtime":1607988539974,"results":"14","hashOfConfig":"11"},{"size":1902,"mtime":1607981227377,"results":"15","hashOfConfig":"11"},{"size":2171,"mtime":1607993369783,"results":"16","hashOfConfig":"11"},{"size":1407,"mtime":1607981227370,"results":"17","hashOfConfig":"11"},{"size":1900,"mtime":1607993367531,"results":"18","hashOfConfig":"11"},{"size":2538,"mtime":1607993370481,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ujf8ji",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/mnt/n/Workspace/CS554/CS554FinalProject/src/index.tsx",[],["43","44"],"/mnt/n/Workspace/CS554/CS554FinalProject/src/reportWebVitals.ts",[],"/mnt/n/Workspace/CS554/CS554FinalProject/src/App.tsx",[],"/mnt/n/Workspace/CS554/CS554FinalProject/src/components/home.tsx",["45"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\n\r\nconst Home = ():JSX.Element => {\r\n\t//TODO: make it so homepage redirects you to playlists if logged in.\r\n\t//No api calls needed\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>\r\n\t\t\t\tWelcome to Spotify Playlist Website\r\n\t\t\t</h1>\r\n\t\t\t<a href=\"http://localhost:8888/login\">\r\n\t\t\t\tLogin with Spotify\r\n\t\t\t</a>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","/mnt/n/Workspace/CS554/CS554FinalProject/src/components/songs.tsx",[],"/mnt/n/Workspace/CS554/CS554FinalProject/src/components/playlists.tsx",["46","47"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Fake data for testing\r\nconst fakeData:Array<object>=[\r\n\t{id:1,\r\n\tname:\"playlist1\"},\r\n\t{id:2,\r\n\t\tname:\"playlist2\"},\r\n\t{id:3,\r\n\tname:\"playlist3\"}\r\n]\r\n\r\nconst Playlists = (props:any) =>{\r\n    const [ loading, setLoading ] = useState<boolean>(true);\r\n    const [ playlistData, setPlaylistData]=useState<Array<object>>([]);\r\n    const [ pageNum, setPageNum ] = useState<number>(NaN);\r\n    let list:Array<object> = [];\r\n\r\n\tconst getPlayLists = async (tok: string) => {\r\n\t\ttry {\r\n\t\t\tconst reqUrl = 'https://api.spotify.com/v1/me/playlists';\r\n\t\t\tconst { data } = await axios.get(reqUrl, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: 'Bearer ' + tok\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn data;\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(\"Request failed\");\r\n\t\t}\r\n\t}\r\n\r\n    //load\r\n    useEffect(():void => {\r\n\t\tasync function fetchData() {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\tconst playlists = await getPlayLists(props.location.state[0].token);\r\n\r\n\t\t\tconsole.log(playlists.items);\r\n\r\n\t\t\tsetPlaylistData(playlists.items);\r\n\t\t\t//Check if pagenum is valid and in bounds, if invalid or out of bounds goto page 0, need api call for bounds\r\n\t\t\tsetPageNum(props.match.params.pagenum);\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\t\r\n\t\t}\r\n\t\tfetchData();\r\n    }, [props.match.params.pagenum]); \r\n    \r\n\t//Builds list of playlists\r\n\t//TODO: Make prettier, probably put everthing for each playlist into its own rectange with the album cover on the left or something\r\n    const buildList = (playlist:any) => {\r\n\t\treturn (\r\n\t\t\t<li key={playlist.id}><Link className=\"siteLink\"  to={`/playlists/${playlist.id}`}>{playlist.name}</Link> </li>\r\n\t\t);\r\n\t};\r\n\r\n    \r\n    if (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Loading....</h2>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n    //Build list of playlists\r\n    else{\r\n        list =\r\n\t\t\tplaylistData &&\r\n\t\t\tplaylistData.map((playlist) => {\r\n\t\t\t\treturn buildList(playlist);\r\n\r\n    });\r\n\t\t//TODO: pagination\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Playlists Page: {pageNum}</h1>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{list}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n    }\r\n};\r\n\r\nexport default Playlists;\r\n","/mnt/n/Workspace/CS554/CS554FinalProject/src/components/song.tsx",[],"/mnt/n/Workspace/CS554/CS554FinalProject/src/components/playlist.tsx",[],["48","49"],"/mnt/n/Workspace/CS554/CS554FinalProject/src/components/login.tsx",["50","51","52","53","54"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Spotify {\r\n  display_name: string,\r\n  id: string,\r\n  email: string,\r\n  external_urls: any,\r\n  href: string,\r\n  images: any,\r\n  country: string\r\n}\r\n\r\nconst Login = (props: any):JSX.Element => {\r\n  const [ token, setToken ] = useState(undefined);\r\n  const [ exResp, setExResp ] = useState(undefined);\r\n\r\n  function getHashParams() {\r\n    var hashParams: any = {};\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n    while ( e = r.exec(q)) {\r\n       hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  const makeRequest = async (tok: string) => {\r\n    try {\r\n      const reqUrl = 'https://api.spotify.com/v1/me';\r\n      const { data } = await axios.get(reqUrl, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + tok \r\n        }\r\n       });\r\n\t\t\treturn data;\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error(\"Request failed\");\r\n\t\t}\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      async function auth() {\r\n        try {\r\n          let params = getHashParams();\r\n          console.log(params);\r\n          let access_token = params.access_token;\r\n          let refresh_token = params.refresh_token;\r\n\r\n          setToken(access_token);\r\n\r\n          let resp = await makeRequest(access_token);\r\n\r\n          setExResp(resp);\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n      }\r\n      auth();\r\n    },\r\n    []\r\n  )\r\n  let noBody = 'Goodbye!';\r\n\treturn (\r\n\t\t<div>\r\n      <h1>\r\n        Login Page\r\n      </h1>\r\n\r\n      <Link className='link' to='/login'>\r\n        Home\r\n      </Link>\r\n      <Link className='link' to={{\r\n        pathname: \"/playlists\",\r\n        state: [{ token: token}]\r\n      }}>\r\n        Playlists\r\n      </Link>\r\n      \r\n\r\n      {/* {exResp !== undefined && token !== undefined ? \r\n      <div>\r\n         <dl>\r\n            <dt>Display name</dt><dd>{exResp1.display_name}</dd>\r\n            <dt>Id</dt><dd>{exResp.id}</dd>\r\n            <dt>Email</dt><dd>{exResp.email}</dd>\r\n            <dt>Spotify URI</dt><dd><a href={exResp.external_urls.spotify}>{exResp.external_urls.spotify}</a></dd>\r\n            <dt>Link</dt><dd><a href={exResp.href}>{exResp.href}</a></dd>\r\n            <dt>Profile Image</dt><dd><a href={exResp.images[0].url}>{exResp.images[0].url}</a></dd>\r\n            <dt>Country</dt><dd>{exResp.country}</dd>\r\n          </dl>\r\n      </div>\r\n      : noBody} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":6,"column":7,"nodeType":"61","messageId":"62","endLine":6,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":52,"column":8,"nodeType":"66","endLine":52,"endColumn":36,"suggestions":"67"},{"ruleId":"55","replacedBy":"68"},{"ruleId":"57","replacedBy":"69"},{"ruleId":"59","severity":1,"message":"70","line":6,"column":11,"nodeType":"61","messageId":"62","endLine":6,"endColumn":18},{"ruleId":"59","severity":1,"message":"71","line":18,"column":11,"nodeType":"61","messageId":"62","endLine":18,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":24,"column":13,"nodeType":"74","messageId":"75","endLine":24,"endColumn":26},{"ruleId":"59","severity":1,"message":"76","line":51,"column":15,"nodeType":"61","messageId":"62","endLine":51,"endColumn":28},{"ruleId":"59","severity":1,"message":"77","line":67,"column":7,"nodeType":"61","messageId":"62","endLine":67,"endColumn":13},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'fakeData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["80"],["78"],["79"],"'Spotify' is defined but never used.","'exResp' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'refresh_token' is assigned a value but never used.","'noBody' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [props.location.state, props.match.params.pagenum]",{"range":"83","text":"84"},[1321,1349],"[props.location.state, props.match.params.pagenum]"]